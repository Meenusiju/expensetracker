{"ast":null,"code":"import _objectSpread from\"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{useRef,useEffect}from'react';import*as d3 from'd3';import{db}from'./firebase';import{collection,query,orderBy,onSnapshot}from\"firebase/firestore\";import*as legend from\"d3-svg-legend\";import{jsx as _jsx}from\"react/jsx-runtime\";var Graph=function Graph(){var containerRef=useRef();var dims={height:300,width:300,radius:150};var cent={x:dims.width/2+5,y:dims.height/2+5};useEffect(function(){var svg=d3.select(containerRef.current).append('svg').attr('width',dims.width+150).attr('height',dims.height+150);var graph=svg.append('g').attr(\"transform\",\"translate(\".concat(cent.x,\", \").concat(cent.y,\")\"));var pie=d3.pie().sort(null).value(function(d){return d.cost;});// the value we are evaluating to create the pie angles\nvar arcPath=d3.arc().outerRadius(dims.radius).innerRadius(dims.radius/2);//set random generated colour \nvar colour=d3.scaleOrdinal(d3[\"schemeSet2\"]);//legend setup\nvar legendGroup=svg.append('g').attr('transform',\"translate(\".concat(dims.width+50,\", 10)\"));var legends=legend.legendColor().shape('path',d3.symbol().type(d3.symbolSquare)()).shapePadding(10).scale(colour);//----------------- Update function -----------------------//\nvar update=function update(data){// update colour scale domain\ncolour.domain(data.map(function(d){return d.name;}));// update legend\nlegendGroup.call(legends);legendGroup.selectAll('text').attr('fill','white');// join enhanced (pie) data to path elements\nvar paths=graph.selectAll('path').data(pie(data));// console.log(paths);\n//tweens for enter, exit and update\nvar arcTweenExit=function arcTweenExit(d){var i=d3.interpolate(d.startAngle,d.endAngle);return function(t){d.startAngle=i(t);return arcPath(d);};};var arcTweenEnter=function arcTweenEnter(d){var i=d3.interpolate(d.endAngle,d.startAngle);return function(t){d.startAngle=i(t);return arcPath(d);};};function arcTweenUpdate(d){//console.log(this._current, d);\n// interpolate between the two objects\nvar i=d3.interpolate(this._current,d);// update the current prop with new updated data\nthis._current=i(1);return function(t){// i(t) returns a value of d (data object) which we pass to arcPath\nreturn arcPath(i(t));};};// handle the exit selection \npaths.exit().transition().duration(750).attrTween(\"d\",arcTweenExit).remove();// handle the current DOM path updates\npaths.transition().duration(750).attrTween(\"d\",arcTweenUpdate);//enter selection\npaths.enter().append('path').attr('class','arc').attr('d',arcPath).attr('stroke','#fff').attr('stroke-width',3).attr('fill',function(d){return colour(d.data.name);}).each(function(d){this._current=d;}).transition().duration(750).attrTween(\"d\",arcTweenEnter);};//----------------- Firebase real time updates --------------//\nvar data=[];var dataRef=collection(db,\"expenseTracker\");var q=query(dataRef,orderBy(\"cost\"));// const querySnapshot = getDocs(q);\n//console.log(querySnapshot.onSnapshot)\nvar unsubscribe=onSnapshot(q,function(querySnapshot){var changes=querySnapshot.docChanges();changes.forEach(function(change){var doc=_objectSpread(_objectSpread({},change.doc.data()),{},{id:change.doc.id});// console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\nswitch(change.type){case'added':data.push(doc);break;case'modified':var index=data.findIndex(function(item){return item.id==doc.id;});data[index]=doc;break;case'removed':data=data.filter(function(item){return item.id!==change.doc.id;});break;default:break;}});update(data);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"canvas\",children:/*#__PURE__*/_jsx(\"div\",{ref:containerRef})});};export default Graph;","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["useRef","useEffect","d3","db","collection","query","orderBy","onSnapshot","legend","Graph","containerRef","dims","height","width","radius","cent","x","y","svg","select","current","append","attr","graph","pie","sort","value","d","cost","arcPath","arc","outerRadius","innerRadius","colour","scaleOrdinal","legendGroup","legends","legendColor","shape","symbol","type","symbolSquare","shapePadding","scale","update","data","domain","map","name","call","selectAll","paths","arcTweenExit","i","interpolate","startAngle","endAngle","t","arcTweenEnter","arcTweenUpdate","_current","exit","transition","duration","attrTween","remove","enter","each","dataRef","q","unsubscribe","querySnapshot","changes","docChanges","forEach","change","doc","id","push","index","findIndex","item","filter"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { db } from './firebase';\r\nimport { collection,query, orderBy, onSnapshot } from \"firebase/firestore\"; \r\nimport * as legend from \"d3-svg-legend\";\r\n\r\nconst Graph = () => {\r\n\r\n   const containerRef = useRef();\r\n   const dims = { height: 300, width: 300, radius: 150 };\r\n   const cent = { x: (dims.width / 2 + 5), y: (dims.height / 2 + 5)};\r\n\r\n    useEffect(() => {\r\n    \r\n        const svg = d3.select(containerRef.current)\r\n        .append('svg')\r\n            .attr('width', dims.width + 150)\r\n            .attr('height', dims.height + 150);\r\n            \r\n        const graph = svg.append('g')\r\n                         .attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\r\n        const pie = d3.pie()\r\n                      .sort(null)\r\n                      .value(d => d.cost);// the value we are evaluating to create the pie angles\r\n        const arcPath = d3.arc()\r\n                          .outerRadius(dims.radius)\r\n                          .innerRadius(dims.radius / 2);\r\n        //set random generated colour \r\n        const colour = d3.scaleOrdinal(d3[\"schemeSet2\"]);\r\n\r\n        //legend setup\r\n        const legendGroup = svg.append('g')\r\n                               .attr('transform', `translate(${dims.width + 50}, 10)`)\r\n\r\n        const legends = legend.legendColor()\r\n                            .shape('path', d3.symbol().type(d3.symbolSquare)())\r\n                            .shapePadding(10)\r\n                            .scale(colour);\r\n\r\n        \r\n        //----------------- Update function -----------------------//\r\n        const update = (data) => {\r\n            // update colour scale domain\r\n            colour.domain(data.map(d => d.name));\r\n            // update legend\r\n            legendGroup.call(legends);\r\n            legendGroup.selectAll('text')\r\n                       .attr('fill', 'white');\r\n            // join enhanced (pie) data to path elements\r\n            const paths = graph.selectAll('path')\r\n                               .data(pie(data));\r\n            // console.log(paths);\r\n            \r\n            //tweens for enter, exit and update\r\n            const arcTweenExit = (d) => {\r\n              var i = d3.interpolate(d.startAngle, d.endAngle);\r\n                return function(t) {\r\n                    d.startAngle = i(t);\r\n                      return arcPath(d);\r\n                };\r\n            }\r\n            const arcTweenEnter = (d) => {\r\n                var i = d3.interpolate(d.endAngle, d.startAngle)\r\n                    return function(t) {\r\n                        d.startAngle = i(t);\r\n                          return arcPath(d);\r\n                    };\r\n            }\r\n            function arcTweenUpdate(d) {\r\n                //console.log(this._current, d);\r\n                // interpolate between the two objects\r\n                var i = d3.interpolate(this._current, d);\r\n                     // update the current prop with new updated data\r\n                     this._current = i(1);\r\n                         return function(t) {\r\n                         // i(t) returns a value of d (data object) which we pass to arcPath\r\n                              return arcPath(i(t));\r\n                         };\r\n            }; \r\n            // handle the exit selection \r\n            paths.exit()\r\n                 .transition().duration(750)\r\n                 .attrTween(\"d\", arcTweenExit)\r\n                 .remove();   \r\n            // handle the current DOM path updates\r\n            paths.transition()\r\n                 .duration(750)\r\n                 .attrTween(\"d\", arcTweenUpdate);    \r\n            //enter selection\r\n            paths.enter()\r\n                    .append('path')\r\n                    .attr('class', 'arc')\r\n                    .attr('d', arcPath)\r\n                    .attr('stroke', '#fff')\r\n                    .attr('stroke-width', 3)\r\n                    .attr('fill', d => colour(d.data.name))\r\n                    .each(function(d){ this._current = d })\r\n                    .transition().duration(750).attrTween(\"d\", arcTweenEnter);                 \r\n        } \r\n\r\n        //----------------- Firebase real time updates --------------//\r\n        var data = [];  \r\n        const dataRef = collection(db, \"expenseTracker\");\r\n        const q = query(dataRef, orderBy(\"cost\"));\r\n        // const querySnapshot = getDocs(q);\r\n        //console.log(querySnapshot.onSnapshot)\r\n        \r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const changes = querySnapshot.docChanges();\r\n            changes.forEach((change) => {\r\n                const doc = {...change.doc.data(), id: change.doc.id};\r\n                // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\r\n                switch (change.type) {\r\n                    case 'added':\r\n                       data.push(doc);\r\n                       break;\r\n                    case 'modified':\r\n                        const index = data.findIndex(item => item.id == doc.id);\r\n                        data[index] = doc;\r\n                        break;\r\n                    case 'removed':\r\n                        data = data.filter(item => item.id !== change.doc.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                } \r\n            });\r\n            update(data);\r\n        });   \r\n            \r\n    }, [])\r\n    return(\r\n     \r\n        \r\n        <div className='canvas'>\r\n            <div ref={containerRef}>\r\n                \r\n            </div>\r\n        </div>\r\n   \r\n    );\r\n}\r\n\r\nexport default Graph;\r\n\r\n"]},"metadata":{},"sourceType":"module"}