{"ast":null,"code":"var _jsxFileName = \"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\src\\\\Graph.js\",\n    _s2 = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useRef, useEffect } from 'react';\nimport { db } from './firebase';\nimport { collection, query, orderBy, onSnapshot, docChanges } from \"firebase/firestore\";\nimport * as legend from \"d3-svg-legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    const canvasRef = useRef(null);\n    const dims = {\n      height: 300,\n      width: 300,\n      radius: 150\n    };\n    const cent = {\n      x: dims.width / 2 + 5,\n      y: dims.height / 2 + 5\n    };\n    const svg = d3.select(canvasRef).append('svg').attr('width', dims.width + 150).attr('height', dims.height + 150);\n    const graph = svg.append('g').attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\n    const pie = d3.pie().sort(null).value(d => d.cost); // the value we are evaluating to create the pie angles\n\n    const arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2); //set random generated colour \n\n    const colour = d3.scaleOrdinal(d3[\"schemeSet3\"]); //legend setup\n\n    const legendGroup = svg.append('g').attr('transform', `translate(${dims.width + 40}, 10)`);\n    const legends = legend.legendColor().shape('path', d3.symbol().type(d3.symbolCircle)()).shapePadding(10).scale(colour); // update function\n\n    const update = data => {\n      // update colour scale domain\n      colour.domain(data.map(d => d.name)); // update legend\n\n      legendGroup.call(legends);\n      legendGroup.selectAll('text').attr('fill', 'white'); // join enhanced (pie) data to path elements\n\n      const paths = graph.selectAll('path').data(pie(data)); // console.log(paths);\n      //tweens for enter, exit and update\n\n      const arcTweenExit = d => {\n        var i = d3.interpolate(d.startAngle, d.endAngle);\n        return function (t) {\n          d.startAngle = i(t);\n          return arcPath(d);\n        };\n      };\n\n      const arcTweenEnter = d => {\n        var i = d3.interpolate(d.startAngle, d.endAngle - 0.1);\n        return function (t) {\n          d.startAngle = i(t);\n          return arcPath(d);\n        };\n      }; // use function keyword to allow use of 'this'\n\n\n      function arcTweenUpdate(d) {\n        //console.log(this._current, d);\n        // interpolate between the two objects\n        var i = d3.interpolate(this._current, d); // update the current prop with new updated data\n\n        this._current = i(1);\n        return function (t) {\n          // i(t) returns a value of d (data object) which we pass to arcPath\n          return arcPath(i(t));\n        };\n      }\n\n      ; // handle the exit selection \n\n      paths.exit().transition().duration(750).attrTween(\"d\", arcTweenExit).remove(); // handle the current DOM path updates\n\n      paths.transition().duration(750).attrTween(\"d\", arcTweenUpdate);\n      ; //enter selection\n\n      paths.enter().append('path').attr('class', 'arc').attr('d', arcPath).attr('stroke', '#fff').attr('stroke-width', 3).attr('fill', d => colour(d.data.name)).each(function (d) {\n        this._current = d;\n      }).transition().duration(750).attrTween(\"d\", arcTweenEnter);\n    };\n  }, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\")), \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n  var data = [];\n  const dataRef = collection(db, \"expenseTracker\");\n  const q = query(dataRef, orderBy(\"cost\")); // const querySnapshot = getDocs(q);\n  //console.log(querySnapshot.onSnapshot)\n\n  const unsubscribe = onSnapshot(q, querySnapshot => {\n    const changes = querySnapshot.docChanges();\n    changes.forEach(change => {\n      const doc = { ...change.doc.data(),\n        id: change.doc.id\n      }; // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\n\n      switch (change.type) {\n        case 'added':\n          data.push(doc);\n          break;\n\n        case 'modified':\n          const index = data.findIndex(item => item.id == doc.id);\n          data[index] = doc;\n          break;\n\n        case 'removed':\n          data = data.filter(item => item.id !== change.doc.id);\n          break;\n\n        default:\n          break;\n      }\n    });\n    update(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"canvas\",\n    id: \"canvas\",\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Graph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["d3","useRef","useEffect","db","collection","query","orderBy","onSnapshot","docChanges","legend","Graph","canvasRef","dims","height","width","radius","cent","x","y","svg","select","append","attr","graph","pie","sort","value","d","cost","arcPath","arc","outerRadius","innerRadius","colour","scaleOrdinal","legendGroup","legends","legendColor","shape","symbol","type","symbolCircle","shapePadding","scale","update","data","domain","map","name","call","selectAll","paths","arcTweenExit","i","interpolate","startAngle","endAngle","t","arcTweenEnter","arcTweenUpdate","_current","exit","transition","duration","attrTween","remove","enter","each","dataRef","q","unsubscribe","querySnapshot","changes","forEach","change","doc","id","push","index","findIndex","item","filter"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,SAASC,UAAT,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,UAApC,EAA+CC,UAA/C,QAAiE,oBAAjE;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AAAA;;AAClB,KAAAR,SAAS,IAAC,MAAM;AAAA;;AAChB,UAAMS,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;AACA,UAAMW,IAAI,GAAG;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,GAAtB;AAA2BC,MAAAA,MAAM,EAAE;AAAnC,KAAb;AACA,UAAMC,IAAI,GAAG;AAAEC,MAAAA,CAAC,EAAGL,IAAI,CAACE,KAAL,GAAa,CAAb,GAAiB,CAAvB;AAA2BI,MAAAA,CAAC,EAAGN,IAAI,CAACC,MAAL,GAAc,CAAd,GAAkB;AAAjD,KAAb;AAEA,UAAMM,GAAG,GAAGnB,EAAE,CAACoB,MAAH,CAAUT,SAAV,EACGU,MADH,CACU,KADV,EAEGC,IAFH,CAEQ,OAFR,EAEiBV,IAAI,CAACE,KAAL,GAAa,GAF9B,EAGGQ,IAHH,CAGQ,QAHR,EAGkBV,IAAI,CAACC,MAAL,GAAc,GAHhC,CAAZ;AAKA,UAAMU,KAAK,GAAGJ,GAAG,CAACE,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,WADT,EACuB,aAAYN,IAAI,CAACC,CAAE,KAAID,IAAI,CAACE,CAAE,GADrD,CAAd;AAGA,UAAMM,GAAG,GAAGxB,EAAE,CAACwB,GAAH,GACGC,IADH,CACQ,IADR,EAEGC,KAFH,CAESC,CAAC,IAAIA,CAAC,CAACC,IAFhB,CAAZ,CAbgB,CAekB;;AAElC,UAAMC,OAAO,GAAG7B,EAAE,CAAC8B,GAAH,GACGC,WADH,CACenB,IAAI,CAACG,MADpB,EAEGiB,WAFH,CAEepB,IAAI,CAACG,MAAL,GAAc,CAF7B,CAAhB,CAjBgB,CAoBhB;;AACA,UAAMkB,MAAM,GAAGjC,EAAE,CAACkC,YAAH,CAAgBlC,EAAE,CAAC,YAAD,CAAlB,CAAf,CArBgB,CAuBhB;;AACA,UAAMmC,WAAW,GAAGhB,GAAG,CAACE,MAAJ,CAAW,GAAX,EACIC,IADJ,CACS,WADT,EACuB,aAAYV,IAAI,CAACE,KAAL,GAAa,EAAG,OADnD,CAApB;AAGA,UAAMsB,OAAO,GAAG3B,MAAM,CAAC4B,WAAP,GACOC,KADP,CACa,MADb,EACqBtC,EAAE,CAACuC,MAAH,GAAYC,IAAZ,CAAiBxC,EAAE,CAACyC,YAApB,GADrB,EAEOC,YAFP,CAEoB,EAFpB,EAGOC,KAHP,CAGaV,MAHb,CAAhB,CA3BgB,CAgChB;;AACA,UAAMW,MAAM,GAAIC,IAAD,IAAU;AACrB;AACAZ,MAAAA,MAAM,CAACa,MAAP,CAAcD,IAAI,CAACE,GAAL,CAASpB,CAAC,IAAIA,CAAC,CAACqB,IAAhB,CAAd,EAFqB,CAGrB;;AACAb,MAAAA,WAAW,CAACc,IAAZ,CAAiBb,OAAjB;AACAD,MAAAA,WAAW,CAACe,SAAZ,CAAsB,MAAtB,EAA8B5B,IAA9B,CAAmC,MAAnC,EAA2C,OAA3C,EALqB,CAOrB;;AACA,YAAM6B,KAAK,GAAG5B,KAAK,CAAC2B,SAAN,CAAgB,MAAhB,EACML,IADN,CACWrB,GAAG,CAACqB,IAAD,CADd,CAAd,CARqB,CAUrB;AAEA;;AACA,YAAMO,YAAY,GAAIzB,CAAD,IAAO;AACxB,YAAI0B,CAAC,GAAGrD,EAAE,CAACsD,WAAH,CAAe3B,CAAC,CAAC4B,UAAjB,EAA6B5B,CAAC,CAAC6B,QAA/B,CAAR;AACI,eAAO,UAASC,CAAT,EAAY;AACf9B,UAAAA,CAAC,CAAC4B,UAAF,GAAeF,CAAC,CAACI,CAAD,CAAhB;AACE,iBAAO5B,OAAO,CAACF,CAAD,CAAd;AACL,SAHD;AAIP,OAND;;AAOA,YAAM+B,aAAa,GAAI/B,CAAD,IAAO;AACzB,YAAI0B,CAAC,GAAGrD,EAAE,CAACsD,WAAH,CAAe3B,CAAC,CAAC4B,UAAjB,EAA6B5B,CAAC,CAAC6B,QAAF,GAAW,GAAxC,CAAR;AACI,eAAO,UAASC,CAAT,EAAY;AACf9B,UAAAA,CAAC,CAAC4B,UAAF,GAAeF,CAAC,CAACI,CAAD,CAAhB;AACE,iBAAO5B,OAAO,CAACF,CAAD,CAAd;AACL,SAHD;AAIP,OAND,CApBqB,CA2BrB;;;AACA,eAASgC,cAAT,CAAwBhC,CAAxB,EAA2B;AACvB;AACA;AACA,YAAI0B,CAAC,GAAGrD,EAAE,CAACsD,WAAH,CAAe,KAAKM,QAApB,EAA8BjC,CAA9B,CAAR,CAHuB,CAIlB;;AACA,aAAKiC,QAAL,GAAgBP,CAAC,CAAC,CAAD,CAAjB;AACI,eAAO,UAASI,CAAT,EAAY;AACnB;AACK,iBAAO5B,OAAO,CAACwB,CAAC,CAACI,CAAD,CAAF,CAAd;AACJ,SAHD;AAIZ;;AAAA,OAtCoB,CAuCrB;;AACAN,MAAAA,KAAK,CAACU,IAAN,GACMC,UADN,GACmBC,QADnB,CAC4B,GAD5B,EAEMC,SAFN,CAEgB,GAFhB,EAEqBZ,YAFrB,EAGMa,MAHN,GAxCqB,CA6CrB;;AACAd,MAAAA,KAAK,CAACW,UAAN,GACMC,QADN,CACe,GADf,EAEMC,SAFN,CAEgB,GAFhB,EAEqBL,cAFrB;AAEqC,OAhDhB,CAkDrB;;AACAR,MAAAA,KAAK,CAACe,KAAN,GACM7C,MADN,CACa,MADb,EAEMC,IAFN,CAEW,OAFX,EAEoB,KAFpB,EAGMA,IAHN,CAGW,GAHX,EAGgBO,OAHhB,EAIMP,IAJN,CAIW,QAJX,EAIqB,MAJrB,EAKMA,IALN,CAKW,cALX,EAK2B,CAL3B,EAMMA,IANN,CAMW,MANX,EAMmBK,CAAC,IAAIM,MAAM,CAACN,CAAC,CAACkB,IAAF,CAAOG,IAAR,CAN9B,EAOMmB,IAPN,CAOW,UAASxC,CAAT,EAAW;AAAE,aAAKiC,QAAL,GAAgBjC,CAAhB;AAAmB,OAP3C,EAQMmC,UARN,GAQmBC,QARnB,CAQ4B,GAR5B,EAQiCC,SARjC,CAQ2C,GAR3C,EAQgDN,aARhD;AAUH,KA7DD;AA8DC,GA/FQ,kCAAT;;AAmGI,MAAIb,IAAI,GAAG,EAAX;AAEA,QAAMuB,OAAO,GAAGhE,UAAU,CAACD,EAAD,EAAK,gBAAL,CAA1B;AACA,QAAMkE,CAAC,GAAGhE,KAAK,CAAC+D,OAAD,EAAU9D,OAAO,CAAC,MAAD,CAAjB,CAAf,CAvGc,CAwGd;AACA;;AACA,QAAMgE,WAAW,GAAG/D,UAAU,CAAC8D,CAAD,EAAKE,aAAD,IAAmB;AAC7C,UAAMC,OAAO,GAAGD,aAAa,CAAC/D,UAAd,EAAhB;AACAgE,IAAAA,OAAO,CAACC,OAAR,CAAiBC,MAAD,IAAY;AACxB,YAAMC,GAAG,GAAG,EAAC,GAAGD,MAAM,CAACC,GAAP,CAAW9B,IAAX,EAAJ;AAAuB+B,QAAAA,EAAE,EAAEF,MAAM,CAACC,GAAP,CAAWC;AAAtC,OAAZ,CADwB,CAExB;;AACA,cAAQF,MAAM,CAAClC,IAAf;AACI,aAAK,OAAL;AACGK,UAAAA,IAAI,CAACgC,IAAL,CAAUF,GAAV;AACA;;AACH,aAAK,UAAL;AACI,gBAAMG,KAAK,GAAGjC,IAAI,CAACkC,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAACJ,EAAL,IAAWD,GAAG,CAACC,EAAtC,CAAd;AACA/B,UAAAA,IAAI,CAACiC,KAAD,CAAJ,GAAcH,GAAd;AACA;;AACJ,aAAK,SAAL;AACI9B,UAAAA,IAAI,GAAGA,IAAI,CAACoC,MAAL,CAAYD,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACC,GAAP,CAAWC,EAA3C,CAAP;AACA;;AACJ;AACI;AAZR;AAcH,KAjBD;AAkBAhC,IAAAA,MAAM,CAACC,IAAD,CAAN;AACP,GArB6B,CAA9B;AAuBA,sBAEI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,EAAE,EAAC,QAAvB;AAAgC,IAAA,GAAG,EAAElC;AAArC;AAAA;AAAA;AAAA;AAAA,UAFJ;AAKH;;IAtIQD,K;;KAAAA,K;AAwIP,eAAeA,KAAf","sourcesContent":["import * as d3 from 'd3';\r\nimport { useRef, useEffect } from 'react';\r\nimport { db } from './firebase';\r\nimport { collection,query, orderBy, onSnapshot,docChanges } from \"firebase/firestore\"; \r\nimport * as legend from \"d3-svg-legend\";\r\n\r\nfunction Graph () {\r\nuseEffect(() => {\r\nconst canvasRef = useRef(null);\r\nconst dims = { height: 300, width: 300, radius: 150 };\r\nconst cent = { x: (dims.width / 2 + 5), y: (dims.height / 2 + 5)};\r\n\r\nconst svg = d3.select(canvasRef)\r\n              .append('svg')\r\n              .attr('width', dims.width + 150)\r\n              .attr('height', dims.height + 150);\r\n  \r\nconst graph = svg.append('g')\r\n                 .attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\r\n\r\nconst pie = d3.pie()\r\n              .sort(null)\r\n              .value(d => d.cost);// the value we are evaluating to create the pie angles\r\n\r\nconst arcPath = d3.arc()\r\n                  .outerRadius(dims.radius)\r\n                  .innerRadius(dims.radius / 2);\r\n//set random generated colour \r\nconst colour = d3.scaleOrdinal(d3[\"schemeSet3\"]);\r\n\r\n//legend setup\r\nconst legendGroup = svg.append('g')\r\n                       .attr('transform', `translate(${dims.width + 40}, 10)`)\r\n\r\nconst legends = legend.legendColor()\r\n                      .shape('path', d3.symbol().type(d3.symbolCircle)())\r\n                      .shapePadding(10)\r\n                      .scale(colour)\r\n\r\n// update function\r\nconst update = (data) => {\r\n    // update colour scale domain\r\n    colour.domain(data.map(d => d.name));\r\n    // update legend\r\n    legendGroup.call(legends);\r\n    legendGroup.selectAll('text').attr('fill', 'white');\r\n  \r\n    // join enhanced (pie) data to path elements\r\n    const paths = graph.selectAll('path')\r\n                       .data(pie(data));\r\n    // console.log(paths);\r\n    \r\n    //tweens for enter, exit and update\r\n    const arcTweenExit = (d) => {\r\n        var i = d3.interpolate(d.startAngle, d.endAngle);\r\n            return function(t) {\r\n                d.startAngle = i(t);\r\n                  return arcPath(d);\r\n            };\r\n    }\r\n    const arcTweenEnter = (d) => {\r\n        var i = d3.interpolate(d.startAngle, d.endAngle-0.1);\r\n            return function(t) {\r\n                d.startAngle = i(t);\r\n                  return arcPath(d);\r\n            };\r\n    }\r\n    // use function keyword to allow use of 'this'\r\n    function arcTweenUpdate(d) {\r\n        //console.log(this._current, d);\r\n        // interpolate between the two objects\r\n        var i = d3.interpolate(this._current, d);\r\n             // update the current prop with new updated data\r\n             this._current = i(1);\r\n                 return function(t) {\r\n                 // i(t) returns a value of d (data object) which we pass to arcPath\r\n                      return arcPath(i(t));\r\n                 };\r\n    };\r\n    // handle the exit selection \r\n    paths.exit()\r\n         .transition().duration(750)\r\n         .attrTween(\"d\", arcTweenExit)\r\n         .remove();\r\n\r\n    // handle the current DOM path updates\r\n    paths.transition()\r\n         .duration(750)\r\n         .attrTween(\"d\", arcTweenUpdate);;\r\n   \r\n    //enter selection\r\n    paths.enter()\r\n         .append('path')\r\n         .attr('class', 'arc')\r\n         .attr('d', arcPath)\r\n         .attr('stroke', '#fff')\r\n         .attr('stroke-width', 3)\r\n         .attr('fill', d => colour(d.data.name))\r\n         .each(function(d){ this._current = d })\r\n         .transition().duration(750).attrTween(\"d\", arcTweenEnter);       \r\n \r\n};\r\n})\r\n\r\n    \r\n   \r\n    var data = [];  \r\n         \r\n    const dataRef = collection(db, \"expenseTracker\");\r\n    const q = query(dataRef, orderBy(\"cost\"));\r\n    // const querySnapshot = getDocs(q);\r\n    //console.log(querySnapshot.onSnapshot)\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const changes = querySnapshot.docChanges();\r\n            changes.forEach((change) => {\r\n                const doc = {...change.doc.data(), id: change.doc.id};\r\n                // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\r\n                switch (change.type) {\r\n                    case 'added':\r\n                       data.push(doc);\r\n                       break;\r\n                    case 'modified':\r\n                        const index = data.findIndex(item => item.id == doc.id);\r\n                        data[index] = doc;\r\n                        break;\r\n                    case 'removed':\r\n                        data = data.filter(item => item.id !== change.doc.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                } \r\n            });\r\n            update(data);\r\n    });\r\n    \r\n    return(\r\n     \r\n        <div class=\"canvas\" id=\"canvas\" ref={canvasRef}></div>\r\n   \r\n    );\r\n}\r\n\r\n  export default Graph;"]},"metadata":{},"sourceType":"module"}