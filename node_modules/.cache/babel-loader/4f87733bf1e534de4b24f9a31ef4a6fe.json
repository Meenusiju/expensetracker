{"ast":null,"code":"var _jsxFileName = \"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\src\\\\Graph.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { db } from './firebase';\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\nimport * as legend from \"d3-svg-legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const ref = useRef();\n  const dims = {\n    height: 300,\n    width: 300,\n    radius: 150\n  };\n  const cent = {\n    x: dims.width / 2 + 5,\n    y: dims.height / 2 + 5\n  };\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.append('svg').attr('width', dims.width + 150).attr('height', dims.height + 150);\n    const graph = svg.append('g').attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\n    const pie = d3.pie().sort(null).value(d => d.cost); // the value we are evaluating to create the pie angles\n\n    const arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2);\n\n    const update = data => {\n      console.log(data);\n    };\n\n    var data = [];\n    const dataRef = collection(db, \"expenseTracker\");\n    const q = query(dataRef, orderBy(\"cost\")); // const querySnapshot = getDocs(q);\n    //console.log(querySnapshot.onSnapshot)\n\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const changes = querySnapshot.docChanges();\n      changes.forEach(change => {\n        const doc = { ...change.doc.data(),\n          id: change.doc.id\n        }; // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\n\n        switch (change.type) {\n          case 'added':\n            data.push(doc);\n            break;\n\n          case 'modified':\n            const index = data.findIndex(item => item.id == doc.id);\n            data[index] = doc;\n            break;\n\n          case 'removed':\n            data = data.filter(item => item.id !== change.doc.id);\n            break;\n\n          default:\n            break;\n        }\n      });\n      update(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"canvas\",\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["useRef","useEffect","d3","db","collection","query","orderBy","onSnapshot","legend","Test","ref","dims","height","width","radius","cent","x","y","svg","select","current","append","attr","graph","pie","sort","value","d","cost","arcPath","arc","outerRadius","innerRadius","update","data","console","log","dataRef","q","unsubscribe","querySnapshot","changes","docChanges","forEach","change","doc","id","type","push","index","findIndex","item","filter","canvasRef"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { db } from './firebase';\r\nimport { collection,query, orderBy, onSnapshot } from \"firebase/firestore\"; \r\nimport * as legend from \"d3-svg-legend\";\r\n\r\nconst Test = () => {\r\n\r\n   const ref = useRef();\r\n   const dims = { height: 300, width: 300, radius: 150 };\r\n   const cent = { x: (dims.width / 2 + 5), y: (dims.height / 2 + 5)};\r\n\r\n    useEffect(() => {\r\n    \r\n        const svg = d3.select(ref.current);\r\n    \r\n        svg.append('svg')\r\n            .attr('width', dims.width + 150)\r\n            .attr('height', dims.height + 150);\r\n            \r\n        const graph = svg.append('g')\r\n                         .attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\r\n        const pie = d3.pie()\r\n                      .sort(null)\r\n                      .value(d => d.cost);// the value we are evaluating to create the pie angles\r\n        const arcPath = d3.arc()\r\n                          .outerRadius(dims.radius)\r\n                          .innerRadius(dims.radius / 2);\r\n        \r\n        const update = (data) => {\r\n            console.log(data);\r\n        } \r\n        var data = [];  \r\n         \r\n    const dataRef = collection(db, \"expenseTracker\");\r\n    const q = query(dataRef, orderBy(\"cost\"));\r\n    // const querySnapshot = getDocs(q);\r\n    //console.log(querySnapshot.onSnapshot)\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const changes = querySnapshot.docChanges();\r\n            changes.forEach((change) => {\r\n                const doc = {...change.doc.data(), id: change.doc.id};\r\n                // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\r\n                switch (change.type) {\r\n                    case 'added':\r\n                       data.push(doc);\r\n                       break;\r\n                    case 'modified':\r\n                        const index = data.findIndex(item => item.id == doc.id);\r\n                        data[index] = doc;\r\n                        break;\r\n                    case 'removed':\r\n                        data = data.filter(item => item.id !== change.doc.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                } \r\n            });\r\n            update(data);\r\n    });   \r\n            \r\n    }, [])\r\n    return(\r\n     \r\n        <div class=\"canvas\" ref={canvasRef}></div>\r\n   \r\n    );\r\n}\r\n\r\nexport default Test;\r\n\r\n"]},"metadata":{},"sourceType":"module"}