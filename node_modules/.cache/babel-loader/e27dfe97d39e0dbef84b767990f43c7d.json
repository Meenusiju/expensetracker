{"ast":null,"code":"var _jsxFileName = \"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\src\\\\Graph.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { db } from './firebase';\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\nimport * as legend from \"d3-svg-legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const ref = useRef();\n  const dims = {\n    height: 300,\n    width: 300,\n    radius: 150\n  };\n  const cent = {\n    x: dims.width / 2 + 5,\n    y: dims.height / 2 + 5\n  };\n  useEffect(() => {\n    const svg = d3.select(ref.current).append('svg').attr('width', dims.width + 150).attr('height', dims.height + 150);\n    const graph = svg.append('g').attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\n    const pie = d3.pie().sort(null).value(d => d.cost); // the value we are evaluating to create the pie angles\n\n    const arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2); //set random generated colour \n\n    const colour = d3.scaleOrdinal(d3[\"schemeSet3\"]); //legend setup\n\n    const legendGroup = svg.append('g').attr('transform', `translate(${dims.width + 40}, 10)`);\n    const legends = legend.legendColor().shape('path', d3.symbol().type(d3.symbolCircle)()).shapePadding(10).scale(colour); //----------------- Update function -----------------------//\n\n    const update = data => {\n      // update colour scale domain\n      colour.domain(data.map(d => d.name)); // update legend\n\n      legendGroup.call(legends);\n      legendGroup.selectAll('text').attr('fill', 'white'); // join enhanced (pie) data to path elements\n\n      const paths = graph.selectAll('path').data(pie(data)); // console.log(paths);\n      //tweens for enter, exit and update\n\n      const arcTweenExit = d => {\n        var i = d3.interpolate(d.startAngle, d.endAngle);\n        return function (t) {\n          d.startAngle = i(t);\n          return arcPath(d);\n        };\n      };\n\n      const arcTweenEnter = d => {\n        var i = d3.interpolate(d.endAngle, d.startAngle);\n        return function (t) {\n          d.startAngle = i(t);\n          return arcPath(d);\n        };\n      };\n\n      function arcTweenUpdate(d) {\n        //console.log(this._current, d);\n        // interpolate between the two objects\n        var i = d3.interpolate(this._current, d); // update the current prop with new updated data\n\n        this._current = i(1);\n        return function (t) {\n          // i(t) returns a value of d (data object) which we pass to arcPath\n          return arcPath(i(t));\n        };\n      }\n\n      ; // handle the exit selection \n\n      paths.exit().transition().duration(750).attrTween(\"d\", arcTweenExit).remove(); // handle the current DOM path updates\n\n      paths.transition().duration(750).attrTween(\"d\", arcTweenUpdate); //enter selection\n\n      paths.enter().append('path').attr('class', 'arc').attr('d', arcPath).attr('stroke', '#fff').attr('stroke-width', 3).attr('fill', d => colour(d.data.name)).each(function (d) {\n        this._current = d;\n      }).transition().duration(750).attrTween(\"d\", arcTweenEnter);\n    }; //----------------- Firebase real time updates --------------//\n\n\n    var data = [];\n    const dataRef = collection(db, \"expenseTracker\");\n    const q = query(dataRef, orderBy(\"cost\")); // const querySnapshot = getDocs(q);\n    //console.log(querySnapshot.onSnapshot)\n\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const changes = querySnapshot.docChanges();\n      changes.forEach(change => {\n        const doc = { ...change.doc.data(),\n          id: change.doc.id\n        }; // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\n\n        switch (change.type) {\n          case 'added':\n            data.push(doc);\n            break;\n\n          case 'modified':\n            const index = data.findIndex(item => item.id == doc.id);\n            data[index] = doc;\n            break;\n\n          case 'removed':\n            data = data.filter(item => item.id !== change.doc.id);\n            break;\n\n          default:\n            break;\n        }\n      });\n      update(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["useRef","useEffect","d3","db","collection","query","orderBy","onSnapshot","legend","Test","ref","dims","height","width","radius","cent","x","y","svg","select","current","append","attr","graph","pie","sort","value","d","cost","arcPath","arc","outerRadius","innerRadius","colour","scaleOrdinal","legendGroup","legends","legendColor","shape","symbol","type","symbolCircle","shapePadding","scale","update","data","domain","map","name","call","selectAll","paths","arcTweenExit","i","interpolate","startAngle","endAngle","t","arcTweenEnter","arcTweenUpdate","_current","exit","transition","duration","attrTween","remove","enter","each","dataRef","q","unsubscribe","querySnapshot","changes","docChanges","forEach","change","doc","id","push","index","findIndex","item","filter"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { db } from './firebase';\r\nimport { collection,query, orderBy, onSnapshot } from \"firebase/firestore\"; \r\nimport * as legend from \"d3-svg-legend\";\r\n\r\nconst Test = () => {\r\n\r\n   const ref = useRef();\r\n   const dims = { height: 300, width: 300, radius: 150 };\r\n   const cent = { x: (dims.width / 2 + 5), y: (dims.height / 2 + 5)};\r\n\r\n    useEffect(() => {\r\n    \r\n        const svg = d3.select(ref.current)\r\n        .append('svg')\r\n            .attr('width', dims.width + 150)\r\n            .attr('height', dims.height + 150);\r\n            \r\n        const graph = svg.append('g')\r\n                         .attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\r\n        const pie = d3.pie()\r\n                      .sort(null)\r\n                      .value(d => d.cost);// the value we are evaluating to create the pie angles\r\n        const arcPath = d3.arc()\r\n                          .outerRadius(dims.radius)\r\n                          .innerRadius(dims.radius / 2);\r\n        //set random generated colour \r\n        const colour = d3.scaleOrdinal(d3[\"schemeSet3\"]);\r\n\r\n        //legend setup\r\n        const legendGroup = svg.append('g')\r\n                               .attr('transform', `translate(${dims.width + 40}, 10)`)\r\n\r\n        const legends = legend.legendColor()\r\n                            .shape('path', d3.symbol().type(d3.symbolCircle)())\r\n                            .shapePadding(10)\r\n                            .scale(colour);\r\n\r\n        \r\n        //----------------- Update function -----------------------//\r\n        const update = (data) => {\r\n            // update colour scale domain\r\n            colour.domain(data.map(d => d.name));\r\n            // update legend\r\n            legendGroup.call(legends);\r\n            legendGroup.selectAll('text').attr('fill', 'white');\r\n            // join enhanced (pie) data to path elements\r\n            const paths = graph.selectAll('path')\r\n                               .data(pie(data));\r\n            // console.log(paths);\r\n            \r\n            //tweens for enter, exit and update\r\n            const arcTweenExit = (d) => {\r\n              var i = d3.interpolate(d.startAngle, d.endAngle);\r\n                return function(t) {\r\n                    d.startAngle = i(t);\r\n                      return arcPath(d);\r\n                };\r\n            }\r\n            const arcTweenEnter = (d) => {\r\n                var i = d3.interpolate(d.endAngle, d.startAngle)\r\n                    return function(t) {\r\n                        d.startAngle = i(t);\r\n                          return arcPath(d);\r\n                    };\r\n            }\r\n            function arcTweenUpdate(d) {\r\n                //console.log(this._current, d);\r\n                // interpolate between the two objects\r\n                var i = d3.interpolate(this._current, d);\r\n                     // update the current prop with new updated data\r\n                     this._current = i(1);\r\n                         return function(t) {\r\n                         // i(t) returns a value of d (data object) which we pass to arcPath\r\n                              return arcPath(i(t));\r\n                         };\r\n            }; \r\n            // handle the exit selection \r\n            paths.exit()\r\n                 .transition().duration(750)\r\n                 .attrTween(\"d\", arcTweenExit)\r\n                 .remove();   \r\n            // handle the current DOM path updates\r\n            paths.transition()\r\n                 .duration(750)\r\n                 .attrTween(\"d\", arcTweenUpdate);    \r\n            //enter selection\r\n            paths.enter()\r\n                    .append('path')\r\n                    .attr('class', 'arc')\r\n                    .attr('d', arcPath)\r\n                    .attr('stroke', '#fff')\r\n                    .attr('stroke-width', 3)\r\n                    .attr('fill', d => colour(d.data.name))\r\n                    .each(function(d){ this._current = d })\r\n                    .transition().duration(750).attrTween(\"d\", arcTweenEnter);                 \r\n        } \r\n\r\n        //----------------- Firebase real time updates --------------//\r\n        var data = [];  \r\n        const dataRef = collection(db, \"expenseTracker\");\r\n        const q = query(dataRef, orderBy(\"cost\"));\r\n        // const querySnapshot = getDocs(q);\r\n        //console.log(querySnapshot.onSnapshot)\r\n        \r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const changes = querySnapshot.docChanges();\r\n            changes.forEach((change) => {\r\n                const doc = {...change.doc.data(), id: change.doc.id};\r\n                // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\r\n                switch (change.type) {\r\n                    case 'added':\r\n                       data.push(doc);\r\n                       break;\r\n                    case 'modified':\r\n                        const index = data.findIndex(item => item.id == doc.id);\r\n                        data[index] = doc;\r\n                        break;\r\n                    case 'removed':\r\n                        data = data.filter(item => item.id !== change.doc.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                } \r\n            });\r\n            update(data);\r\n        });   \r\n            \r\n    }, [])\r\n    return(\r\n     \r\n        \r\n        <div className='canvas'>\r\n            <div ref={ref}>\r\n                \r\n            </div>\r\n        </div>\r\n   \r\n    );\r\n}\r\n\r\nexport default Test;\r\n\r\n"]},"metadata":{},"sourceType":"module"}