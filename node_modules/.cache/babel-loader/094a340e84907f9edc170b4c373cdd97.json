{"ast":null,"code":"var _jsxFileName = \"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\src\\\\Graph.js\";\nimport * as d3 from 'd3';\nimport { db } from './firebase';\nimport { collection, getDocs, orderBy, doc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dims = {\n  height: 300,\n  width: 300,\n  radius: 150\n};\nconst cent = {\n  x: dims.width / 2 + 5,\n  y: dims.height / 2 + 5\n};\nconst svgWidth = dims.width + 150;\nconst svgHeight = dims.height + 150;\n\nfunction Graph() {\n  //define pie from d3 \n  const pie = d3.pie().sort(null).value(d => d.cost); //this creates start and end angle within 2pi range\n\n  const angles = pie([{\n    name: 'rent',\n    cost: 500\n  }, {\n    name: 'bills',\n    cost: 300\n  }, {\n    name: 'gaming',\n    cost: 200\n  }]); //this creates a path for each angle(eg : arcPath(angles[0])= M9.184850993605149e-15...)\n\n  const arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2);\n\n  async function menuList() {\n    const menuCol = collection(db, 'expenseTracker');\n    const snapshot = await getDocs(menuCol);\n    const resultData = snapshot.docs.map(doc => doc.data());\n    console.log(resultData);\n  }\n\n  const querySnapshot = getDocs(collection(db, \"expenseTracker\"));\n  console.log(querySnapshot.docs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${cent.x}, ${cent.y})`,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: svgWidth,\n        height: svgHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["d3","db","collection","getDocs","orderBy","doc","getDoc","dims","height","width","radius","cent","x","y","svgWidth","svgHeight","Graph","pie","sort","value","d","cost","angles","name","arcPath","arc","outerRadius","innerRadius","menuList","menuCol","snapshot","resultData","docs","map","data","console","log","querySnapshot"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,SAASC,UAAT,EAAoBC,OAApB,EAA6BC,OAA7B,EAAqCC,GAArC,EAAyCC,MAAzC,QAAuD,oBAAvD;;;AAEA,MAAMC,IAAI,GAAG;AAAEC,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,KAAK,EAAE,GAAtB;AAA2BC,EAAAA,MAAM,EAAE;AAAnC,CAAb;AACA,MAAMC,IAAI,GAAG;AAAEC,EAAAA,CAAC,EAAGL,IAAI,CAACE,KAAL,GAAa,CAAb,GAAiB,CAAvB;AACEI,EAAAA,CAAC,EAAGN,IAAI,CAACC,MAAL,GAAc,CAAd,GAAkB;AADxB,CAAb;AAEA,MAAMM,QAAQ,GAAGP,IAAI,CAACE,KAAL,GAAa,GAA9B;AACA,MAAMM,SAAS,GAAGR,IAAI,CAACC,MAAL,GAAc,GAAhC;;AAEA,SAASQ,KAAT,GAAkB;AACX;AACC,QAAMC,GAAG,GAAGjB,EAAE,CAACiB,GAAH,GACGC,IADH,CACQ,IADR,EAEGC,KAFH,CAESC,CAAC,IAAIA,CAAC,CAACC,IAFhB,CAAZ,CAFU,CAKV;;AACA,QAAMC,MAAM,GAAGL,GAAG,CAAC,CACf;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBF,IAAAA,IAAI,EAAE;AAAtB,GADe,EAEf;AAAEE,IAAAA,IAAI,EAAE,OAAR;AAAiBF,IAAAA,IAAI,EAAE;AAAvB,GAFe,EAGf;AAAEE,IAAAA,IAAI,EAAE,QAAR;AAAkBF,IAAAA,IAAI,EAAE;AAAxB,GAHe,CAAD,CAAlB,CANU,CAWV;;AACA,QAAMG,OAAO,GAAGxB,EAAE,CAACyB,GAAH,GACGC,WADH,CACenB,IAAI,CAACG,MADpB,EAEGiB,WAFH,CAEepB,IAAI,CAACG,MAAL,GAAc,CAF7B,CAAhB;;AAGC,iBAAekB,QAAf,GAA0B;AACP,UAAMC,OAAO,GAAG3B,UAAU,CAACD,EAAD,EAAK,gBAAL,CAA1B;AACA,UAAM6B,QAAQ,GAAG,MAAM3B,OAAO,CAAC0B,OAAD,CAA9B;AACA,UAAME,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB5B,GAAG,IAAIA,GAAG,CAAC6B,IAAJ,EAAzB,CAAnB;AAEpBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACE;;AACD,QAAMM,aAAa,GAAIlC,OAAO,CAACD,UAAU,CAACD,EAAD,EAAK,gBAAL,CAAX,CAA9B;AAEPkC,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,CAACL,IAA1B;AAEM,sBACA;AAAA,2BACA;AAAG,MAAA,SAAS,EAAG,aAAYrB,IAAI,CAACC,CAAE,KAAID,IAAI,CAACE,CAAE,GAA7C;AAAA,6BACA;AAAK,QAAA,KAAK,EAAEC,QAAZ;AAAsB,QAAA,MAAM,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAUL;;KApCMC,K;AAsCP,eAAeA,KAAf","sourcesContent":["import * as d3 from 'd3';\r\nimport { db } from './firebase';\r\nimport { collection,getDocs, orderBy,doc,getDoc } from \"firebase/firestore\"; \r\n\r\nconst dims = { height: 300, width: 300, radius: 150 };\r\nconst cent = { x: (dims.width / 2 + 5), \r\n               y: (dims.height / 2 + 5)};\r\nconst svgWidth = dims.width + 150;\r\nconst svgHeight = dims.height + 150;\r\n\r\nfunction Graph () {\r\n       //define pie from d3 \r\n        const pie = d3.pie()\r\n                      .sort(null)\r\n                      .value(d => d.cost);\r\n        //this creates start and end angle within 2pi range\r\n        const angles = pie([\r\n            { name: 'rent', cost: 500 },\r\n            { name: 'bills', cost: 300 },\r\n            { name: 'gaming', cost: 200 }\r\n        ])\r\n        //this creates a path for each angle(eg : arcPath(angles[0])= M9.184850993605149e-15...)\r\n        const arcPath = d3.arc()\r\n                          .outerRadius(dims.radius)\r\n                          .innerRadius(dims.radius / 2);\r\n         async function menuList() {\r\n                            const menuCol = collection(db, 'expenseTracker');\r\n                            const snapshot = await getDocs(menuCol);\r\n                            const resultData = snapshot.docs.map(doc => doc.data());\r\n                                          \r\n        console.log(resultData)\r\n         }\r\n         const querySnapshot =  getDocs(collection(db, \"expenseTracker\"));\r\n\r\n  console.log(querySnapshot.docs);\r\n\r\n        return(\r\n        <>\r\n        <g transform={`translate(${cent.x}, ${cent.y})`}>\r\n        <svg width={svgWidth} height={svgHeight}>\r\n\r\n\r\n        </svg>\r\n        </g>\r\n        </>\r\n        );\r\n  }\r\n\r\n  export default Graph;"]},"metadata":{},"sourceType":"module"}