{"ast":null,"code":"var _jsxFileName = \"D:\\\\dataviz\\\\d3-pie-chart\\\\expense-tracker\\\\src\\\\Graph.js\";\nimport * as d3 from 'd3';\nimport { db } from './firebase';\nimport { collection, query, orderBy, onSnapshot, docChanges } from \"firebase/firestore\";\nimport * as legend from \"d3-svg-legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(d3.symbol());\nconst dims = {\n  height: 300,\n  width: 300,\n  radius: 150\n};\nconst cent = {\n  x: dims.width / 2 + 5,\n  y: dims.height / 2 + 5\n};\nconst svg = d3.select('.canvas').append('svg').attr('width', dims.width + 150).attr('height', dims.height + 150);\nconst graph = svg.append('g').attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\nconst pie = d3.pie().sort(null).value(d => d.cost); // the value we are evaluating to create the pie angles\n\nconst arcPath = d3.arc().outerRadius(dims.radius).innerRadius(dims.radius / 2); //set random generated colour \n\nconst colour = d3.scaleOrdinal(d3[\"schemeSet3\"]); //legend setup\n\nconst legendGroup = svg.append('g').attr('transform', `translate(${dims.width + 40}, 10)`);\nconst legends = legend.legendColor().shape('path', d3.symbol().type(d3.symbolCircle)()).shapePadding(10).scale(colour);\nconsole.log(legends); // update function\n\nconst update = data => {\n  // update colour scale domain\n  colour.domain(data.map(d => d.name)); // update legend\n\n  legendGroup.call(legends);\n  legendGroup.selectAll('text').attr('fill', 'white'); // join enhanced (pie) data to path elements\n\n  const paths = graph.selectAll('path').data(pie(data)); // console.log(paths);\n  //tweens for enter, exit and update\n\n  const arcTweenExit = d => {\n    var i = d3.interpolate(d.startAngle, d.endAngle);\n    return function (t) {\n      d.startAngle = i(t);\n      return arcPath(d);\n    };\n  };\n\n  const arcTweenEnter = d => {\n    var i = d3.interpolate(d.startAngle, d.endAngle - 0.1);\n    return function (t) {\n      d.startAngle = i(t);\n      return arcPath(d);\n    };\n  }; // use function keyword to allow use of 'this'\n\n\n  function arcTweenUpdate(d) {\n    //console.log(this._current, d);\n    // interpolate between the two objects\n    var i = d3.interpolate(this._current, d); // update the current prop with new updated data\n\n    this._current = i(1);\n    return function (t) {\n      // i(t) returns a value of d (data object) which we pass to arcPath\n      return arcPath(i(t));\n    };\n  }\n\n  ; // handle the exit selection \n\n  paths.exit().transition().duration(750).attrTween(\"d\", arcTweenExit).remove(); // handle the current DOM path updates\n\n  paths.transition().duration(750).attrTween(\"d\", arcTweenUpdate);\n  ; //enter selection\n\n  paths.enter().append('path').attr('class', 'arc').attr('d', arcPath).attr('stroke', '#fff').attr('stroke-width', 3).attr('fill', d => colour(d.data.name)).each(function (d) {\n    this._current = d;\n  }).transition().duration(750).attrTween(\"d\", arcTweenEnter);\n};\n\nfunction Graph() {\n  var data = [];\n  const dataRef = collection(db, \"expenseTracker\");\n  const q = query(dataRef, orderBy(\"cost\")); // const querySnapshot = getDocs(q);\n  //console.log(querySnapshot.onSnapshot)\n\n  const unsubscribe = onSnapshot(q, querySnapshot => {\n    const changes = querySnapshot.docChanges();\n    changes.forEach(change => {\n      const doc = { ...change.doc.data(),\n        id: change.doc.id\n      }; // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\n\n      switch (change.type) {\n        case 'added':\n          data.push(doc);\n          break;\n\n        case 'modified':\n          const index = data.findIndex(item => item.id == doc.id);\n          data[index] = doc;\n          break;\n\n        case 'removed':\n          data = data.filter(item => item.id !== change.doc.id);\n          break;\n\n        default:\n          break;\n      }\n    });\n    update(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"canvas\",\n    id: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["D:/dataviz/d3-pie-chart/expense-tracker/src/Graph.js"],"names":["d3","db","collection","query","orderBy","onSnapshot","docChanges","legend","console","log","symbol","dims","height","width","radius","cent","x","y","svg","select","append","attr","graph","pie","sort","value","d","cost","arcPath","arc","outerRadius","innerRadius","colour","scaleOrdinal","legendGroup","legends","legendColor","shape","type","symbolCircle","shapePadding","scale","update","data","domain","map","name","call","selectAll","paths","arcTweenExit","i","interpolate","startAngle","endAngle","t","arcTweenEnter","arcTweenUpdate","_current","exit","transition","duration","attrTween","remove","enter","each","Graph","dataRef","q","unsubscribe","querySnapshot","changes","forEach","change","doc","id","push","index","findIndex","item","filter"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\r\nimport { db } from './firebase';\r\nimport { collection,query, orderBy, onSnapshot,docChanges } from \"firebase/firestore\"; \r\nimport * as legend from \"d3-svg-legend\";\r\n\r\nconsole.log(d3.symbol())\r\n\r\nconst dims = { height: 300, width: 300, radius: 150 };\r\nconst cent = { x: (dims.width / 2 + 5), y: (dims.height / 2 + 5)};\r\n\r\nconst svg = d3.select('.canvas')\r\n              .append('svg')\r\n              .attr('width', dims.width + 150)\r\n              .attr('height', dims.height + 150);\r\n  \r\nconst graph = svg.append('g')\r\n                 .attr(\"transform\", `translate(${cent.x}, ${cent.y})`);\r\n\r\nconst pie = d3.pie()\r\n              .sort(null)\r\n              .value(d => d.cost);// the value we are evaluating to create the pie angles\r\n\r\nconst arcPath = d3.arc()\r\n                  .outerRadius(dims.radius)\r\n                  .innerRadius(dims.radius / 2);\r\n//set random generated colour \r\nconst colour = d3.scaleOrdinal(d3[\"schemeSet3\"]);\r\n\r\n//legend setup\r\nconst legendGroup = svg.append('g')\r\n  .attr('transform', `translate(${dims.width + 40}, 10)`)\r\n\r\nconst legends = legend.legendColor()\r\n  .shape('path', d3.symbol().type(d3.symbolCircle)())\r\n  .shapePadding(10)\r\n  .scale(colour)\r\n\r\n  console.log(legends)\r\n\r\n// update function\r\nconst update = (data) => {\r\n    // update colour scale domain\r\n    colour.domain(data.map(d => d.name));\r\n    // update legend\r\n  legendGroup.call(legends);\r\n  legendGroup.selectAll('text').attr('fill', 'white');\r\n  \r\n    // join enhanced (pie) data to path elements\r\n    const paths = graph.selectAll('path')\r\n                       .data(pie(data));\r\n    // console.log(paths);\r\n    \r\n    //tweens for enter, exit and update\r\n    const arcTweenExit = (d) => {\r\n        var i = d3.interpolate(d.startAngle, d.endAngle);\r\n            return function(t) {\r\n                d.startAngle = i(t);\r\n                  return arcPath(d);\r\n            };\r\n    }\r\n    const arcTweenEnter = (d) => {\r\n        var i = d3.interpolate(d.startAngle, d.endAngle-0.1);\r\n            return function(t) {\r\n                d.startAngle = i(t);\r\n                  return arcPath(d);\r\n            };\r\n    }\r\n    // use function keyword to allow use of 'this'\r\n    function arcTweenUpdate(d) {\r\n        //console.log(this._current, d);\r\n        // interpolate between the two objects\r\n        var i = d3.interpolate(this._current, d);\r\n             // update the current prop with new updated data\r\n             this._current = i(1);\r\n                 return function(t) {\r\n                 // i(t) returns a value of d (data object) which we pass to arcPath\r\n                      return arcPath(i(t));\r\n                 };\r\n    };\r\n    // handle the exit selection \r\n    paths.exit()\r\n         .transition().duration(750)\r\n         .attrTween(\"d\", arcTweenExit)\r\n         .remove();\r\n\r\n    // handle the current DOM path updates\r\n    paths.transition()\r\n         .duration(750)\r\n         .attrTween(\"d\", arcTweenUpdate);;\r\n   \r\n    //enter selection\r\n    paths.enter()\r\n         .append('path')\r\n         .attr('class', 'arc')\r\n         .attr('d', arcPath)\r\n         .attr('stroke', '#fff')\r\n         .attr('stroke-width', 3)\r\n         .attr('fill', d => colour(d.data.name))\r\n         .each(function(d){ this._current = d })\r\n         .transition().duration(750).attrTween(\"d\", arcTweenEnter);       \r\n \r\n};\r\nfunction Graph () {\r\n   \r\n    var data = [];  \r\n         \r\n    const dataRef = collection(db, \"expenseTracker\");\r\n    const q = query(dataRef, orderBy(\"cost\"));\r\n    // const querySnapshot = getDocs(q);\r\n    //console.log(querySnapshot.onSnapshot)\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const changes = querySnapshot.docChanges();\r\n            changes.forEach((change) => {\r\n                const doc = {...change.doc.data(), id: change.doc.id};\r\n                // console.log(\"change type: \" +change.type+ \"  change id: \" + change.doc.id)\r\n                switch (change.type) {\r\n                    case 'added':\r\n                       data.push(doc);\r\n                       break;\r\n                    case 'modified':\r\n                        const index = data.findIndex(item => item.id == doc.id);\r\n                        data[index] = doc;\r\n                        break;\r\n                    case 'removed':\r\n                        data = data.filter(item => item.id !== change.doc.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                } \r\n            });\r\n            update(data);\r\n    });\r\n    \r\n    return(\r\n     \r\n        <div class=\"canvas\" id=\"canvas\"></div>\r\n   \r\n    );\r\n}\r\n\r\n  export default Graph;"]},"metadata":{},"sourceType":"module"}